# Generated by Django 3.2 on 2021-04-08 14:36

import importlib.resources

import django.db.models.deletion
from django.db import migrations, models

from .. import models as core_models


def create_builtin_sources(apps, schema_editor):
    """
    Create in the database the sources that are already built-in in :mod:`pandasdmx`.
    This function is called when performing the migration: see
    `this page <https://docs.djangoproject.com/en/3.1/topics/migrations/#data-migrations>`_ for details on how this
    works!
    """
    file = importlib.resources.open_text("sophon.core.migrations", "0001_sources.json")
    core_models.DataSource.create_from_sources_json(file=file)
    file.close()


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataFlow',
            fields=[
                ('surrogate_id', models.IntegerField(help_text='Internal id used by Django to identify this DataFlow.',
                                                     primary_key=True, serialize=False, verbose_name='Surrogate id')),
                ('id',
                 models.CharField(help_text='Internal string used in SDMX communication to identify the DataFlow.',
                                  max_length=64, verbose_name='SDMX id')),
                ('description', models.TextField(blank=True, help_text='Natural language description of the DataFlow.',
                                                 verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id',
                 models.CharField(help_text='Internal id used by PandaSDMX to reference the source.', max_length=16,
                                  primary_key=True, serialize=False, verbose_name='PandaSDMX id')),
                ('name', models.CharField(help_text='Full length name of the data source.', max_length=512,
                                          verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Long description of the data source.',
                                                 verbose_name='Description')),
                ('url', models.URLField(help_text='The base URL of the SDMX endpoint of the data source.',
                                        verbose_name='API URL')),
                ('documentation', models.URLField(help_text='Documentation URL of the data source.', null=True,
                                                  verbose_name='Documentation URL')),
                ('data_content_type', models.CharField(choices=[('JSON', 'JSON'), ('XML', 'XML')], default='XML',
                                                       help_text='The format in which the API returns its data.',
                                                       max_length=16, verbose_name='API type')),
                ('headers',
                 models.JSONField(default=dict, help_text='HTTP headers to attach to every request, as a JSON object.',
                                  verbose_name='HTTP Headers')),
                ('resources', models.JSONField(default=dict, help_text='Unknown and undocumented JSON object.',
                                               verbose_name='Resources')),
                ('supports_agencyscheme', models.BooleanField(default=True,
                                                              help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.AgencyScheme">AgencyScheme </a> or not.',
                                                              verbose_name='Supports AgencyScheme')),
                ('supports_categoryscheme', models.BooleanField(default=True,
                                                                help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.CategoryScheme">CategoryScheme </a> or not.',
                                                                verbose_name='Supports CategoryScheme')),
                ('supports_codelist', models.BooleanField(default=True,
                                                          help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.CodeList">CodeList </a> or not.',
                                                          verbose_name='Supports CodeList')),
                ('supports_conceptscheme', models.BooleanField(default=True,
                                                               help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.ConceptScheme">ConceptScheme </a> or not.',
                                                               verbose_name='Supports ConceptScheme')),
                ('supports_data', models.BooleanField(default=True,
                                                      help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.DataSet">DataSet </a> or not.',
                                                      verbose_name='Supports DataSet')),
                ('supports_dataflow', models.BooleanField(default=True,
                                                          help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.DataflowDefinition">DataflowDefinition </a> or not.',
                                                          verbose_name='Supports DataflowDefinition')),
                ('supports_datastructure', models.BooleanField(default=True,
                                                               help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.DataStructureDefinition">CategoryScheme </a> or not.',
                                                               verbose_name='Supports DataStructureDefinition')),
                ('supports_provisionagreement', models.BooleanField(default=True,
                                                                    help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.model.ProvisionAgreement">CategoryScheme </a> or not.',
                                                                    verbose_name='Supports ProvisionAgreement')),
                ('supports_preview', models.BooleanField(default=False,
                                                         help_text='Whether the data source supports <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.Request.preview_data">previews of data </a> or not.',
                                                         verbose_name='Supports previews')),
                ('supports_structurespecific_data', models.BooleanField(default=False,
                                                                        help_text='Whether the data source returns <a href="https://pandasdmx.readthedocs.io/en/latest/api.html#pandasdmx.source.Source">structure-specific data messages </a> or not.',
                                                                        verbose_name='Supports structure-specific data messages')),
                ('builtin', models.BooleanField(help_text='Whether the source is built-in in PandaSDMX or not.',
                                                verbose_name='Builtin')),
                ('last_sync', models.DateTimeField(
                    help_text='The datetime at which the data flows of this source were last syncronized.', null=True,
                    verbose_name='Last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('slug',
                 models.SlugField(help_text='Unique alphanumeric string which identifies the project.', max_length=64,
                                  primary_key=True, serialize=False, verbose_name='Slug')),
                ('name',
                 models.CharField(help_text='The display name of the project.', max_length=512, verbose_name='Name')),
                ('description', models.TextField(blank=True,
                                                 help_text='A brief description of the project, to be displayed inthe overview.',
                                                 verbose_name='Description')),
                ('flows', models.ManyToManyField(blank=True, help_text='The DataFlows used in this project.',
                                                 related_name='used_in', to='core.DataFlow')),
            ],
        ),
        migrations.AddField(
            model_name='dataflow',
            name='datasource',
            field=models.ForeignKey(help_text='The DataSource this object belongs to.',
                                    on_delete=django.db.models.deletion.RESTRICT, to='core.datasource'),
        ),
        migrations.RunPython(create_builtin_sources)
    ]
